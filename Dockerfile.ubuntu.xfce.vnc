# This Dockerfile is used to build an headles vnc image based on Ubuntu

FROM ubuntu:18.04

ENV container docker
ENV LC_ALL C
ENV DEBIAN_FRONTEND noninteractive
ENV DISPLAY=:1 \
    VNC_PORT=5901 \
    NO_VNC_PORT=6901
EXPOSE $VNC_PORT $NO_VNC_PORT

### Environment config
ENV HOME=/headless \
    TERM=xterm \
    STARTUPDIR=/dockerstartup \
    INST_SCRIPTS=/headless/install \
    NO_VNC_HOME=/headless/noVNC \
    DEBIAN_FRONTEND=noninteractive \
    VNC_COL_DEPTH=24 \
    VNC_RESOLUTION=1280x1024 \
    VNC_PW=vncpassword \
    VNC_VIEW_ONLY=false

# RUN sed -i 's/# deb/deb/g' /etc/apt/sources.list

# Install systemd
RUN apt-get update \
    && apt-get install -y systemd systemd-sysv \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN cd /lib/systemd/system/sysinit.target.wants/ \
    && ls | grep -v systemd-tmpfiles-setup | xargs rm -f $1

RUN rm -f /lib/systemd/system/multi-user.target.wants/* \
    /etc/systemd/system/*.wants/* \
    /lib/systemd/system/local-fs.target.wants/* \
    /lib/systemd/system/sockets.target.wants/*udev* \
    /lib/systemd/system/sockets.target.wants/*initctl* \
    /lib/systemd/system/basic.target.wants/* \
    /lib/systemd/system/anaconda.target.wants/* \
    /lib/systemd/system/plymouth* \
    /lib/systemd/system/systemd-update-utmp*

VOLUME [ "/sys/fs/cgroup" ]


#ENTRYPOINT ["/lib/systemd/systemd"]


#MAINTAINER Simon Hofmann "simon.hofmann@consol.de"
#ENV REFRESHED_AT 2018-10-29

#LABEL io.k8s.description="Headless VNC Container with Xfce window manager, firefox and chromium" \
#      io.k8s.display-name="Headless VNC Container based on Ubuntu" \
#      io.openshift.expose-services="6901:http,5901:xvnc" \
#      io.openshift.tags="vnc, ubuntu, xfce" \
#      io.openshift.non-scalable=true

## Connection ports for controlling the UI:
# VNC port:5901
# noVNC webport, connect via http://IP:6901/?password=vncpassword



WORKDIR $HOME

### Add all install scripts for further steps
ADD ./src/common/install/ $INST_SCRIPTS/
ADD ./src/ubuntu/install/ $INST_SCRIPTS/
RUN find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +

### Install some common tools
RUN $INST_SCRIPTS/tools.sh
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'

### Install custom fonts
RUN $INST_SCRIPTS/install_custom_fonts.sh

### Install xvnc-server & noVNC - HTML5 based VNC viewer
#RUN $INST_SCRIPTS/tigervnc.sh
#RUN $INST_SCRIPTS/no_vnc.sh

### Install firefox and chrome browser
RUN $INST_SCRIPTS/firefox.sh
#RUN $INST_SCRIPTS/chrome.sh

### Install xfce UI
RUN $INST_SCRIPTS/xfce_ui.sh
ADD ./src/common/xfce/ $HOME/

### configure startup
RUN $INST_SCRIPTS/libnss_wrapper.sh

ADD ./src/common/scripts $STARTUPDIR
RUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME

## Install lightdm
RUN $INST_SCRIPTS/lightdm.sh
ADD ./src/common/lightdm/ /usr/share/lightdm/lightdm.conf.d/

## Install SSH Server and allow connexion password
RUN $INST_SCRIPTS/ssh.sh

#USER 1000

CMD ["/lib/systemd/systemd"]
#ENTRYPOINT ["/lib/systemd/systemd"]
#ENTRYPOINT ["/dockerstartup/vnc_startup.sh"]
#ENTRYPOINT ["/dockerstartup/restartLightDm.sh"]

#CMD ["--wait"]

#if [ "${BUILD_ENV}" = "test" ]; then
#    docker run -e NODE_ENV=development myimage
#else
#    docker run myimage
#fi